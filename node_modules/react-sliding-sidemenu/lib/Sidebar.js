'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./styles/sidebar.css');

var _SidebarHeader = require('./SidebarHeader.js');

var _SidebarHeader2 = _interopRequireDefault(_SidebarHeader);

var _SidebarLinks = require('./SidebarLinks.js');

var _SidebarLinks2 = _interopRequireDefault(_SidebarLinks);

var _sidebarDescription = require('./sidebarDescription.js');

var _sidebarDescription2 = _interopRequireDefault(_sidebarDescription);

var _SidebarProfile = require('./SidebarProfile.js');

var _SidebarProfile2 = _interopRequireDefault(_SidebarProfile);

var _SidebarFooter = require('./SidebarFooter.js');

var _SidebarFooter2 = _interopRequireDefault(_SidebarFooter);

var _profilePic = require('./profilePic.jpg');

var _profilePic2 = _interopRequireDefault(_profilePic);

var _menuIcon = require('./icons/menuIcon.png');

var _menuIcon2 = _interopRequireDefault(_menuIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Sidebar = function (_Component) {
    _inherits(Sidebar, _Component);

    function Sidebar(props, context) {
        _classCallCheck(this, Sidebar);

        var _this = _possibleConstructorReturn(this, (Sidebar.__proto__ || Object.getPrototypeOf(Sidebar)).call(this, props, context));

        _this.state = {
            isSidebarVisible: false
        };
        _this.toggleSidebar = _this.toggleSidebar.bind(_this);
        return _this;
    }

    _createClass(Sidebar, [{
        key: 'toggleSidebar',
        value: function toggleSidebar() {
            this.setState({
                isSidebarVisible: !this.state.isSidebarVisible
            });
        }
    }, {
        key: 'validateOrderOfContent',
        value: function validateOrderOfContent(orderOfContent) {
            var arr = [orderOfContent.profile, orderOfContent.description, orderOfContent.links];
            var valid = true;
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] > 0 && arr[i] < 4) {
                    for (var j = i + 1; j < arr.length; j++) {
                        if (arr[i] == arr[j]) valid = false;
                        break;
                    }
                } else {
                    valid = false;
                    break;
                }
            }
            return valid;
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                top = _props.top,
                fontSize = _props.fontSize,
                fontStyle = _props.fontStyle,
                profileVisible = _props.profileVisible,
                profilePic = _props.profilePic,
                ProfileName = _props.ProfileName,
                hasReactRouterLinks = _props.hasReactRouterLinks,
                hasContentToshow = _props.hasContentToshow,
                expandIconStyle = _props.expandIconStyle,
                sidebarTitle = _props.sidebarTitle,
                descriptionContent = _props.descriptionContent,
                orderOfContents = _props.orderOfContents,
                profileImage = _props.profileImage,
                dataForLinks = _props.dataForLinks,
                onLinkItemClick = _props.onLinkItemClick,
                descriptionVisible = _props.descriptionVisible,
                textColor = _props.textColor;


            var sidebarHeaderProps = {
                fontSize: fontSize,
                fontStyle: fontStyle,
                sidebarTitle: sidebarTitle,
                textColor: textColor
            };

            var sidebarContentProps = {
                fontSize: fontSize,
                fontStyle: fontStyle,
                descriptionContent: descriptionContent,
                descriptionVisible: descriptionVisible,
                textColor: textColor
            };

            var SidebarProfileProps = {
                fontSize: fontSize,
                fontStyle: fontStyle,
                profileVisible: profileVisible,
                ProfileName: ProfileName,
                profileImage: profileImage,
                textColor: textColor
            };

            var sidebarLinksProps = {
                hasReactRouterLinks: hasReactRouterLinks,
                fontSize: fontSize,
                fontStyle: fontStyle,
                dataForLinks: dataForLinks,
                onLinkItemClick: onLinkItemClick,
                textColor: textColor
            };

            var validOrder = this.validateOrderOfContent(orderOfContents);
            if (!validOrder) {
                orderOfContents = {
                    profile: 1,
                    description: 2,
                    links: 3
                };
            }
            var expandButtonTop = top + 10;
            var heightOfSidebar = 100 - top * 100 / window.innerHeight;
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { style: { 'top': expandButtonTop + 'px' }, className: 'expandIcon ' + (!this.state.isSidebarVisible && 'show') },
                    _react2.default.createElement(
                        'a',
                        { href: '#', onClick: this.toggleSidebar },
                        _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement('img', { src: _menuIcon2.default })
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { style: { 'top': top + 'px', 'height': heightOfSidebar + '%' }, className: 'sidebarMenu ' + (this.state.isSidebarVisible && 'show') },
                    _react2.default.createElement(_SidebarHeader2.default, { sidebarHeaderProps: sidebarHeaderProps, closeSidebar: this.toggleSidebar }),
                    orderOfContents.profile == 1 ? _react2.default.createElement(_SidebarProfile2.default, { SidebarProfileProps: SidebarProfileProps }) : orderOfContents.description == 1 ? _react2.default.createElement(_sidebarDescription2.default, { sidebarContentProps: sidebarContentProps }) : _react2.default.createElement(_SidebarLinks2.default, { sidebarLinksProps: sidebarLinksProps }),
                    orderOfContents.profile == 2 ? _react2.default.createElement(_SidebarProfile2.default, { SidebarProfileProps: SidebarProfileProps }) : orderOfContents.description == 2 ? _react2.default.createElement(_sidebarDescription2.default, { sidebarContentProps: sidebarContentProps }) : _react2.default.createElement(_SidebarLinks2.default, { sidebarLinksProps: sidebarLinksProps }),
                    orderOfContents.profile == 3 ? _react2.default.createElement(_SidebarProfile2.default, { SidebarProfileProps: SidebarProfileProps }) : orderOfContents.description == 3 ? _react2.default.createElement(_sidebarDescription2.default, { sidebarContentProps: sidebarContentProps }) : _react2.default.createElement(_SidebarLinks2.default, { sidebarLinksProps: sidebarLinksProps }),
                    _react2.default.createElement(_SidebarFooter2.default, { font: fontSize })
                )
            );
        }
    }]);

    return Sidebar;
}(_react.Component);

Sidebar.defaultProps = {
    top: 0,
    fontSize: 20,
    textColor: 'black',
    fontStyle: 'sans-serif', //'Arial, Helvetica, sans-serif',
    profileVisible: true,
    ProfileName: 'Veeresh Nete',
    hasReactRouterLinks: false,
    descriptionVisible: true,
    expandIconStyle: 'menu-hamburger',
    sidebarTitle: 'React sliding sidebar',
    descriptionContent: _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
            'b',
            null,
            'click to expand profile image'
        ),
        ' ',
        _react2.default.createElement('br', null),
        'React-sliding-sidemenu is a fully customisable, responsive overlay side menu sliding from left. this is the description section which will be user passed free text or DOM element. Side menu has following sections',
        _react2.default.createElement(
            'ul',
            null,
            _react2.default.createElement(
                'li',
                null,
                'Header'
            ),
            _react2.default.createElement(
                'li',
                null,
                'Profile'
            ),
            _react2.default.createElement(
                'li',
                null,
                'Description'
            ),
            _react2.default.createElement(
                'li',
                null,
                'Quick Links'
            )
        )
    ),
    orderOfContents: {
        profile: 1,
        description: 2,
        links: 3
    },
    profileImage: _profilePic2.default,
    dataForLinks: [{
        mainLink: "Main Link 1",
        href: "#",
        subLinks: [{
            subLink: "Sub Link 1",
            href: "#",
            childLinks: [{
                childLink: 'Child Link 1',
                href: '#'
            }, {
                childLink: 'Child Link 2',
                href: '#'
            }]
        }, {
            subLink: "Sub Link 2",
            href: "#",
            childLinks: []
        }, {
            subLink: "SubLink 3",
            href: "#",
            childLinks: []
        }]
    }, {
        mainLink: "Main Link 2",
        href: "#",
        subLinks: [{
            subLink: "Sub Link 1",
            href: "#",
            childLinks: []
        }, {
            subLink: "Sub Link 2",
            href: "#",
            childLinks: []
        }, {
            subLink: "Sub Link 3",
            href: "#",
            childLinks: []
        }]
    }, {
        mainLink: "Main Link 3",
        href: "#",
        subLinks: []
    }]

};
exports.default = Sidebar;