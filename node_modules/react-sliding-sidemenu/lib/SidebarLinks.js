'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./styles/sidebarLinks.css');

var _reactRouterDom = require('react-router-dom');

var _plusIcon = require('./icons/plusIcon.png');

var _plusIcon2 = _interopRequireDefault(_plusIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SidebarLinks = function (_Component) {
    _inherits(SidebarLinks, _Component);

    function SidebarLinks(props, context) {
        _classCallCheck(this, SidebarLinks);

        var _this = _possibleConstructorReturn(this, (SidebarLinks.__proto__ || Object.getPrototypeOf(SidebarLinks)).call(this, props, context));

        _this.state = {
            firstChildSublink: [],
            secondChildSublinks: []
        };
        _this.getlinks = _this.getlinks.bind(_this);
        _this.getSubLinks = _this.getSubLinks.bind(_this);
        _this.expandSubMenu = _this.expandSubMenu.bind(_this);
        _this.expandChildMenu = _this.expandChildMenu.bind(_this);
        return _this;
    }

    _createClass(SidebarLinks, [{
        key: 'handleMainLinkClick',
        value: function handleMainLinkClick(clickedLink, e) {
            if (this.props.sidebarLinksProps.onLinkItemClick) this.props.sidebarLinksProps.onLinkItemClick(clickedLink);
            return true;
        }
    }, {
        key: 'expandSubMenu',
        value: function expandSubMenu(index) {
            var selectedSubMenu = this.state.firstChildSublink;
            if (selectedSubMenu[index] == true) {
                selectedSubMenu[index] = false;
            } else {
                selectedSubMenu[index] = true;
            }

            this.setState({
                firstChildSublink: selectedSubMenu
            });
        }
    }, {
        key: 'expandChildMenu',
        value: function expandChildMenu(index) {
            var selectedChildMenu = this.state.secondChildSublinks;
            if (selectedChildMenu[index] == true) {
                selectedChildMenu[index] = false;
            } else {
                selectedChildMenu[index] = true;
            }

            this.setState({
                secondChildSublinks: selectedChildMenu
            });
        }
    }, {
        key: 'getChildLinks',
        value: function getChildLinks(childLinkItems, key) {
            var _this2 = this;

            var childLinks = childLinkItems;
            var childListItems;
            if (childLinks.length == 0) return;else {
                childListItems = childLinks.map(function (childLink, key) {
                    return _react2.default.createElement(
                        'li',
                        { className: 'sidebarLink-childListItem', key: key },
                        _react2.default.createElement(
                            'div',
                            { style: {
                                    'fontSize': _this2.props.sidebarLinksProps.fontSize - 5 + 'px',
                                    'fontFamily': _this2.props.sidebarLinksProps.fontStyle
                                } },
                            _this2.props.sidebarLinksProps.hasReactRouterLinks ? _react2.default.createElement(
                                _reactRouterDom.Link,
                                { style: {
                                        'color': _this2.props.sidebarLinksProps.textColor
                                    }, className: 'childLinks anchorLinks', to: childLink.href },
                                childLink.childLink
                            ) : _react2.default.createElement(
                                'a',
                                { style: {
                                        'color': _this2.props.sidebarLinksProps.textColor
                                    }, className: 'childLinks anchorLinks', href: childLink.href, onClick: function onClick(e) {
                                        return _this2.handleMainLinkClick(chilldLink, e);
                                    } },
                                childLink.childLink
                            )
                        )
                    );
                });
            }
            return this.state.secondChildSublinks[key] && _react2.default.createElement(
                'ul',
                { className: 'sidebarLink-SubMenuList' },
                childListItems
            );
        }
    }, {
        key: 'getSubLinks',
        value: function getSubLinks(subLinksItems, key) {
            var _this3 = this;

            var subLinks = subLinksItems;
            var subListItems;
            if (subLinks.length == 0) return;else {
                subListItems = subLinks.map(function (subLink, key) {
                    return _react2.default.createElement(
                        'li',
                        { className: 'sidebarLink-SubListItem', key: key },
                        _react2.default.createElement(
                            'div',
                            { style: {
                                    'fontSize': _this3.props.sidebarLinksProps.fontSize - 4 + 'px',
                                    'fontFamily': _this3.props.sidebarLinksProps.fontStyle
                                }, className: 'MainLinksAndExpandparent' },
                            subLink.childLinks.length ? _react2.default.createElement(
                                'a',
                                { style: {
                                        'color': _this3.props.sidebarLinksProps.textColor
                                    }, className: 'expandChildMenuIcon', href: '#', onClick: function onClick() {
                                        return _this3.expandChildMenu(key);
                                    } },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    _react2.default.createElement('img', { src: _plusIcon2.default })
                                )
                            ) : '',
                            _this3.props.sidebarLinksProps.hasReactRouterLinks ? _react2.default.createElement(
                                _reactRouterDom.Link,
                                { style: {
                                        'color': _this3.props.sidebarLinksProps.textColor
                                    }, className: 'SubLinks anchorLinks', to: subLink.href },
                                subLink.subLink
                            ) : _react2.default.createElement(
                                'a',
                                { style: {
                                        'color': _this3.props.sidebarLinksProps.textColor
                                    }, className: 'SubLinks anchorLinks', href: subLink.href, onClick: function onClick(e) {
                                        return _this3.handleMainLinkClick(subLink, e);
                                    } },
                                subLink.subLink
                            )
                        ),
                        subLink.childLinks.length ? _this3.getChildLinks(subLink.childLinks, key) : null
                    );
                });
            }

            return this.state.firstChildSublink[key] && _react2.default.createElement(
                'ul',
                { className: 'sidebarLink-SubMenuList' },
                subListItems
            );
        }
    }, {
        key: 'getlinks',
        value: function getlinks(linkItems) {
            var _this4 = this;

            var links = linkItems;
            var listItems = links.map(function (link, key) {
                return _react2.default.createElement(
                    'div',
                    { key: key },
                    _react2.default.createElement(
                        'li',
                        { className: 'sidebarLink-MainListItem' },
                        _react2.default.createElement(
                            'div',
                            { style: {
                                    'fontSize': _this4.props.sidebarLinksProps.fontSize - 4 + 'px',
                                    'fontFamily': _this4.props.sidebarLinksProps.fontStyle,
                                    'color': _this4.props.sidebarLinksProps.textColor
                                }, className: 'MainLinksAndExpandparent' },
                            link.subLinks.length ? _react2.default.createElement(
                                'a',
                                { style: {
                                        'color': _this4.props.sidebarLinksProps.textColor
                                    }, className: 'expandSubMenuIcon', href: '#', onClick: function onClick() {
                                        return _this4.expandSubMenu(key);
                                    } },
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    _react2.default.createElement('img', { src: _plusIcon2.default })
                                )
                            ) : '',
                            _this4.props.sidebarLinksProps.hasReactRouterLinks ? _react2.default.createElement(
                                _reactRouterDom.Link,
                                { style: {
                                        'color': _this4.props.sidebarLinksProps.textColor
                                    }, className: 'MainLinks anchorLinks', to: link.href },
                                link.mainLink
                            ) : _react2.default.createElement(
                                'a',
                                { style: {
                                        'color': _this4.props.sidebarLinksProps.textColor
                                    }, className: 'MainLinks anchorLinks', onClick: function onClick(e) {
                                        return _this4.handleMainLinkClick(link, e);
                                    }, href: link.href },
                                link.mainLink
                            )
                        ),
                        link.subLinks.length ? _this4.getSubLinks(link.subLinks, key) : null
                    )
                );
            });
            return _react2.default.createElement(
                'ul',
                { className: 'sidebarLink-MainList' },
                listItems
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'sidebarLinks' },
                this.getlinks(this.props.sidebarLinksProps.dataForLinks),
                _react2.default.createElement('hr', null)
            );
        }
    }]);

    return SidebarLinks;
}(_react.Component);

exports.default = SidebarLinks;