'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./styles/sidebarProfile.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SidebarProfile = function (_Component) {
    _inherits(SidebarProfile, _Component);

    function SidebarProfile(props, context) {
        _classCallCheck(this, SidebarProfile);

        var _this = _possibleConstructorReturn(this, (SidebarProfile.__proto__ || Object.getPrototypeOf(SidebarProfile)).call(this, props, context));

        _this.state = {
            imageFullView: false
        };
        _this.toggleImageView = _this.toggleImageView.bind(_this);
        return _this;
    }

    _createClass(SidebarProfile, [{
        key: 'toggleImageView',
        value: function toggleImageView() {
            this.setState({
                imageFullView: !this.state.imageFullView
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var imageStyle = {
                'height': '100%',
                'width': '100%'
            };
            if (this.props.SidebarProfileProps.profileVisible) return _react2.default.createElement(
                'div',
                { className: 'sidebarProfile' },
                _react2.default.createElement(
                    'div',
                    { className: 'sidebarProfile-profileImage' },
                    _react2.default.createElement('img', { onClick: this.toggleImageView,
                        className: 'sidebarProfile-profileImage-image ' + (this.state.imageFullView ? 'fullView' : 'circleView'),
                        src: this.props.SidebarProfileProps.profileImage,
                        alt: 'profile picture' }),
                    !this.state.imageFullView && _react2.default.createElement(
                        'div',
                        { style: {
                                'fontSize': this.props.SidebarProfileProps.fontSize + 'px',
                                'fontFamily': this.props.SidebarProfileProps.fontStyle,
                                'color': this.props.SidebarProfileProps.textColor
                            }, className: 'sidebarProfile-userName' },
                        this.props.SidebarProfileProps.ProfileName
                    )
                ),
                _react2.default.createElement('hr', null)
            );else return null;
        }
    }]);

    return SidebarProfile;
}(_react.Component);

exports.default = SidebarProfile;