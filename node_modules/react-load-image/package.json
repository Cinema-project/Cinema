{
  "_args": [
    [
      {
        "raw": "react-load-image",
        "scope": null,
        "escapedName": "react-load-image",
        "name": "react-load-image",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/bartek/Pulpit/FrontDev/Cinema"
    ]
  ],
  "_from": "react-load-image@latest",
  "_id": "react-load-image@0.1.6",
  "_inCache": true,
  "_location": "/react-load-image",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-load-image-0.1.6.tgz_1512904074885_0.36090810247696936"
  },
  "_npmUser": {
    "name": "davidfurlong",
    "email": "dvfurlong@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-load-image",
    "scope": null,
    "escapedName": "react-load-image",
    "name": "react-load-image",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-load-image/-/react-load-image-0.1.6.tgz",
  "_shasum": "abafacb18813983a8af43d9f2fe9ed7bf89ca29a",
  "_shrinkwrap": null,
  "_spec": "react-load-image",
  "_where": "/home/bartek/Pulpit/FrontDev/Cinema",
  "author": {
    "name": "David Furlong",
    "email": "david@deedmob.com"
  },
  "bugs": {
    "url": "https://github.com/DeedMob/react-load-image/issues"
  },
  "dependencies": {},
  "description": "A React component for showing placeholder content during image loading",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-core": "^6.25.0",
    "babel-eslint": "^3.1.16",
    "babel-loader": "^7",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-runtime": "^5.5.8",
    "chai": "^3.0.0",
    "eslint": "^0.23.0",
    "eslint-plugin-react": "^2.5.2",
    "express": "^4.12.4",
    "git-release-notes": "0.0.2",
    "mocha": "^2.2.5",
    "mversion": "^1.10.0",
    "node-libs-browser": "^0.5.2",
    "onchange": "^3.2.1",
    "opn": "^2.0.1",
    "prop-types": "^15.6.0",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "webpack": "^3.3.0",
    "webpack-dev-middleware": "^1.0.11",
    "yargs": "^3.11.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lCZkg7cljM/QSJODyzya1+CQ1h4UrrKGCI0Sd4H0bP22ntHTuPeDZbq2EipPbN+RA8gWW7urpTMakivIv6cXkg==",
    "shasum": "abafacb18813983a8af43d9f2fe9ed7bf89ca29a",
    "tarball": "https://registry.npmjs.org/react-load-image/-/react-load-image-0.1.6.tgz"
  },
  "gitHead": "ceeaa5bc9797d762ab47e182cc41931baf6b308d",
  "homepage": "https://github.com/DeedMob/react-load-image",
  "keywords": [
    "react-component",
    "react",
    "loader",
    "component"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "davidfurlong",
      "email": "dvfurlong@gmail.com"
    }
  ],
  "name": "react-load-image",
  "optionalDependencies": {},
  "peerDependencies": {
    "prop-types": "^15.6.0",
    "react": "^16.0.0"
  },
  "pre-commit": [
    "build"
  ],
  "readme": "react-load-image\n=================\n\nThis is a fork of https://github.com/hzdg/react-imageloader, however many design changes were made and deprecations fixed so it warranted its own repo/package.\n\nThis React component allows you to display\ncontent while waiting for the image to load, as well as by showing alternate\ncontent if the image fails to load.\n\nInstalling\n-----\n`npm install react-load-image`\n\n\nUsage\n-----\n\n```javascript\nimport React from 'react';\nimport ImageLoader from 'react-load-image';\n\nfunction Preloader(props) {\n  return <img src=\"spinner.gif\" />;\n}\n\nReact.render((\n  <ImageLoader\n    src=\"/path/to/image.jpg\"\n  >\n    <img />\n    <div>Error!</div>\n    <Preloader />\n  </ImageLoader>\n), document.body);\n\n```\n\n\nProps\n-----\n\nName        | Type     | Description\n------------|----------|------------\n`onError`   | function | An optional handler for the [error] event.\n`onLoad`    | function | An optional handler for the [load] event.\n`src`       | string   | The URL of the image to be loaded, will be passed as the src prop to your first child provided. If you want to use it as a background image, make your first child a react component like Name = (props) => <div style={{backgroundImage: props.src}}/> and do <Name/>\n\n\nChildren\n--------\nThe first child of `ImageLoader` will be rendered when the image is successfully loaded. The `src` prop will be passed to it.\n\nThe second child of `ImageLoader` will be rendered when the image load fails.\n\nThe third child of `ImageLoader` will be rendered when the image is in the process of loading\n\n\nAvoiding duplication Example\n-------\n```js\nimport React from 'react';\nimport ImageLoader from 'react-load-image';\nimport ImageError from './ImageError';\nimport ImageLoading from './ImageLoading';\n\nconst Image = (props) =>\n  <ImageLoader {...props}>\n    {this.props.children[0]}\n    <ImageError />\n    <ImageLoader />\n  </ImageLoader>\n\nexport default Image;\n```\n-----\n```js\nimport Image from './Image';\n\n...\n<Image style={{width: '50px'}}>\n  <img style={{border: none}} />\n</Image>\n...\n\n```\n\n\nUsing it as a backgroundImage\n-----\n```js\nimport React from 'react';\n\nconst BackgroundImage = ({src, style = {}, ...props} = {}) =>\n  <div style={Object.assign({backgroundImage: `url(${src})`}, style)} {...props} />\n\nexport default BackgroundImage;\n```\n  <Image style={{width: '50px'}}>\n    <BackgroundImage />\n  </Image>\n```js\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/DeedMob/react-load-image.git"
  },
  "scripts": {
    "build": "npm run build:commonjs",
    "build:commonjs": "babel src --out-dir lib",
    "build:example": "webpack example/example.js example/dist.js",
    "prepublish": "npm run build",
    "watch": "onchange 'src/**/*.js' -- npm run build"
  },
  "version": "0.1.6"
}
