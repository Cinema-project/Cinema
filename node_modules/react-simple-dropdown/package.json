{
  "_args": [
    [
      {
        "raw": "react-simple-dropdown",
        "scope": null,
        "escapedName": "react-simple-dropdown",
        "name": "react-simple-dropdown",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/bartek/Pulpit/FrontDev/Cinema"
    ]
  ],
  "_from": "react-simple-dropdown@latest",
  "_id": "react-simple-dropdown@3.2.0",
  "_inCache": true,
  "_location": "/react-simple-dropdown",
  "_nodeVersion": "6.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-simple-dropdown-3.2.0.tgz_1505057802427_0.7033072663471103"
  },
  "_npmUser": {
    "name": "fauntleroy",
    "email": "the.kaempfer@gmail.com"
  },
  "_npmVersion": "3.9.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-simple-dropdown",
    "scope": null,
    "escapedName": "react-simple-dropdown",
    "name": "react-simple-dropdown",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-simple-dropdown/-/react-simple-dropdown-3.2.0.tgz",
  "_shasum": "9867916aa677b9820e07e140252eeee829d01372",
  "_shrinkwrap": null,
  "_spec": "react-simple-dropdown",
  "_where": "/home/bartek/Pulpit/FrontDev/Cinema",
  "author": {
    "name": "Timothy Kempf",
    "email": "tim@kemp59f.info",
    "url": "http://kempfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff.info"
  },
  "bugs": {
    "url": "https://github.com/Fauntleroy/react-simple-dropdown/issues"
  },
  "dependencies": {
    "classnames": "^2.1.2",
    "prop-types": "^15.5.8"
  },
  "description": "Non-prescriptive React.js dropdown toolkit",
  "devDependencies": {
    "@meadow/eslint-config": "^2.0.2",
    "autoless": "^0.1.7",
    "babel": "6.5.2",
    "babel-cli": "6.10.1",
    "babel-eslint": "^7.2.2",
    "babel-preset-es2016": "6.0.11",
    "babel-preset-react": "6.5.0",
    "babel-preset-stage-0": "6.5.0",
    "babelify": "^7.3.0",
    "brfs": "^1.4.3",
    "browserify": "^13.1.0",
    "dom-classes": "0.0.1",
    "electron": "^1.6.2",
    "eslint": "^3.19.0",
    "highlight.js": "^9.6.0",
    "less": "^2.7.1",
    "mkdirp": "^0.5.1",
    "ncp": "^2.0.0",
    "npm-run-all": "^1.4.0",
    "react": "^15.5.0",
    "react-dom": "^15.5.0",
    "react-highlight": "^0.9.0",
    "sane": "^1.4.1",
    "simple-mock": "0.8.0",
    "tape": "^4.0.0",
    "trash-cli": "^1.2.0",
    "watchify": "^3.7.0",
    "zuul": "^3.11.1"
  },
  "directories": {},
  "dist": {
    "shasum": "9867916aa677b9820e07e140252eeee829d01372",
    "tarball": "https://registry.npmjs.org/react-simple-dropdown/-/react-simple-dropdown-3.2.0.tgz"
  },
  "gitHead": "6d0663678f1c56115bc88cc381f632eac3e453ef",
  "homepage": "https://github.com/Fauntleroy/react-simple-dropdown",
  "keywords": [
    "react",
    "react-component",
    "component",
    "dropdown"
  ],
  "license": "ISC",
  "main": "lib/components/Dropdown.js",
  "maintainers": [
    {
      "name": "fauntleroy",
      "email": "the.kaempfer@gmail.com"
    }
  ],
  "name": "react-simple-dropdown",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "0.14.x || 15.x",
    "react-dom": "0.14.x || 15.x"
  },
  "readme": "## React Simple Dropdown\n\nNon-prescriptive React.js dropdown toolkit.\n\n[See it in action (Demo)](http://fauntleroy.github.io/react-simple-dropdown/)\n\n### Installation\n\nThis module is designed for use with [Browserify](http://browserify.org) (but should work with anything CommonJS compatible). You can easily install it with [npm](http://npmjs.com):\n\n```bash\nnpm install react-simple-dropdown\n```\n\n### How to use\n\nThis module provides three React components that you can use as a basis for any kind of dropdown menu:\n\n- `DropdownTrigger`: The element that will cause your dropdown to appear when clicked.\n- `DropdownContent`: Contains the \"filling\" of your dropdown. Generally, this is a list of links.\n- `Dropdown`: The base element for your dropdown. This contains both the `DropdownTrigger` and the `DropdownContent`, and handles communication between them.\n\nThere is also a [barebones stylesheet](styles/Dropdown.css) which **must be included in order for the component to actually work**.\n\nKeep in mind that `DropdownTrigger` and `DropdownContent` **must be direct children** of `Dropdown`. Here's a quick example:\n\n```js\nvar React = require('react');\nvar Dropdown = require('react-simple-dropdown');\nvar DropdownTrigger = Dropdown.DropdownTrigger;\nvar DropdownContent = Dropdown.DropdownContent;\n\nvar Menu = React.createClass({\n    render: function () {\n        return (\n            <Dropdown>\n                <DropdownTrigger>Profile</DropdownTrigger>\n                <DropdownContent>\n                    <img src=\"avatar.jpg\" /> Username\n                    <ul>\n                        <li>\n                            <a href=\"/profile\">Profile</a>\n                        </li>\n                        <li>\n                            <a href=\"/favorites\">Favorites</a>\n                        </li>\n                        <li>\n                            <a href=\"/logout\">Log Out</a>\n                        </li>\n                    </ul>\n                </DropdownContent>\n            </Dropdown>\n        )\n    }\n});\n```\n\n### Options\n\nOptions can be passed to `Dropdown` as props. A list of available options can be found below. These must be passed to the containing `Dropdown` component.\n\nProperty | Type | Description\n----- | ----- | -----\n**active** | *boolean* | Manually show/hide the `DropdownContent`. Make sure to unset this or the dropdown will stay open.\n**disabled** | *boolean* | Disable toggling of the dropdown by clicking on `DropdownTrigger`. Toggling with `active`, `show()`, and `hide()` is still possible.\n**removeElement** | *boolean* | Remove the `DropdownContent` element when inactive (rather than just hide it).\n**onShow** | *function* | Callback for when `DropdownContent` is shown.\n**onHide** | *function* | Callback for when `DropdownContent` is hidden.\n\n\n### Instance\n\nEach instance of `Dropdown` has some methods developers might find useful.\n\nMethod | Description\n----- | -----\n**show** | Shows the dropdown.\n**hide** | Hides the dropdown.\n**isActive** | Returns a boolean indicating whether or not the dropdown is active.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Fauntleroy/react-simple-dropdown.git"
  },
  "scripts": {
    "build": "babel src/components --out-dir lib/components",
    "clean": "trash lib",
    "dev": "npm-run-all --parallel watch test:browser",
    "docs:build": "npm run build && npm-run-all -p docs:build:*",
    "docs:build:css": "lessc src/docs/index.less docs/index.css",
    "docs:build:html": "ncp src/docs/index.html docs/index.html",
    "docs:build:js": "browserify -t [ babelify ] -t [ brfs ] --extension=.jsx src/docs/index.jsx --outfile docs/index.js",
    "docs:watch": "npm-run-all -p docs:watch:*",
    "docs:watch:css": "autoless src/docs/ docs/",
    "docs:watch:html": "sane 'npm run docs:build:html' src/docs/ --glob='index.html'",
    "docs:watch:js": "watchify -t [ babelify ] -t [ brfs ] --extension=.jsx src/docs/index.jsx --outfile docs/index.js -v",
    "lint": "eslint src --ext .js --ext .jsx",
    "postpublish": "npm run clean",
    "prepublish": "npm run build",
    "test": "npm run build && zuul -- test/**/*.{js,jsx}",
    "test:browser": "zuul --local 55555 -- test/**/*.{js,jsx}",
    "test:electron": "zuul --electron -- test/**/*.{js,jsx}",
    "watch": "npm run build -- -w"
  },
  "version": "3.2.0"
}
